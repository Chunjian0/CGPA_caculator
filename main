
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#pragma warning(disable:4996)

#define NUMSEMESTER 3 
#define MAX_STUDENTS 5000 
#define MAX_NAME_LENGTH 50

void mainMenu();
void staffMenu();
void studentMenu();
void addStudent();
void deleteStudent();
void displayStudent();
void saveToFile();
void loadFromFile();

//define the structure for student information
typedef struct {
    char studentId[10];
    char studentName[MAX_NAME_LENGTH];
    float gpa[NUMSEMESTER];
    float cgpa;
    int numStudents;
    int studentStatus;
} Student;

// Global variables
int numStudents = 0;
int state = 0;
int totalYearCredit = 0;
int studentStatus = 0;

// Array to store student information
Student students[MAX_STUDENTS];

int main() {
    printf("\n");
    printf("***************************************\n");
    printf("|                                     |\n");
    printf("|      Welcome to the Kolej Pasar     |\n");
    printf("|       Grade Management System       |\n");
    printf("|                                     |\n");
    printf("|                                     |\n");
    printf("***************************************\n");

    //Load student information from a file
    loadFromFile();
    mainMenu();
    return(0);
}


void mainMenu() {
    //Display main menu option
    int choice = 0;

    printf("\n_______________________________________\n");
    printf("|                                     |\n");
    printf("|1. Staff Administrator Mode          |\n");
    printf("|2. Student's Mode                    |\n");
    printf("|3. Exit the program                  |\n");
    printf("|_____________________________________|\n");
    printf("\nPlease select option    : ");

    //Check for valid input
    if (scanf("%d", &choice) != 1) {
        printf("\nInvalid input. Please enter a number '1', '2', or '3'.\n");
        while ((getchar()) != '\n'); 
        mainMenu();
        return;
    }
    while ((getchar()) != '\n'); 

    // Navigate to the selected mode or exit
    if (choice == 1) {
        staffMenu();
    }
    else if (choice == 2) {
        studentMenu();
    }
    else if (choice == 3) {
        saveToFile();
    }
    else {
        printf("\nInvalid option. Please select again.\n");
        mainMenu();
    }
}

// Function to display the staff menu
void staffMenu() {
    int choice = 0;
    while (1) {
        printf("\n");
        printf("_______________________________________\n");
        printf("|      Staff Administrator Mode       |\n");
        printf("|_____________________________________|\n");
        printf("|                                     |\n");
        printf("|1. Add Student Information           |\n");
        printf("|2. Delete Student Information        |\n");
        printf("|3. View student information          |\n");
        printf("|4. Return to previous menu           |\n");
        printf("|_____________________________________|\n");
        printf("\nPlease select option    : ");

        if (scanf("%d", &choice) != 1) {
            printf("\nInvalid input. Please enter a number '1', '2', '3', or '4'.\n");
            while ((getchar()) != '\n');
            continue;
        }

        while ((getchar()) != '\n'); 

        if (choice == 1) {
            addStudent();
        }
        else if (choice == 2) {
            deleteStudent();
        }
        else if (choice == 3) {
            displayStudent();
        }
        else if (choice == 4) {
            mainMenu();
        }
        else {
            printf("\nInvalid option. Please select again.\n");
        }
    }
}

// Function to add a new student
void addStudent() {
    char studentId[10];
    printf("please enter student ID : ");
    if (scanf("%s", studentId) != 1) {
        while ((getchar()) != '\n');
        printf("Invalid student ID, please re-enter.");
        return;
    }
    studentId[9] = '\0';

    if (strlen(studentId) > 9) {
        while ((getchar()) != '\n');
        printf("Invalid student ID. The length should not exceed 10 characters.\n");
        return;
    }

    char studentName[MAX_NAME_LENGTH];
    studentName[49] = '\0';
    printf("Enter Student Name      : ");
    (void)scanf(" %49[^\n]", studentName);

    // Loop to collect GPA information for each semester
    for (int semester = 0; semester < NUMSEMESTER; semester++) {
        int numberOfSubject;
        float totalGradePoints = 0;
        int totalCredits = 0;
        int credits = 0;

        printf("\nEnter number of subject in %d semester: ", semester + 1);
        if (scanf("%d", &numberOfSubject) != 1) {
            printf("Invalid number of subjects, please re-enter\n");
            while ((getchar()) != '\n');
            return;
        }

        // Loop to collect subject details (including code, grade, and credit hours)
        for (int i = 0; i < numberOfSubject; i++) {
            char grade[3];
            float score = 0;
            char nameOfSubject[11];
            printf("Enter the CODE OF SUBJECT ,GRADE and CREDIT HOURS in the %d Semester: ", semester + 1);
            (void)scanf(" %10s %2s %d", &nameOfSubject, &grade, &credits);
            grade[2] = '\0';

            if (strcmp(grade, "A") == 0) {
                score = 4.0;
            }
            else if (strcmp(grade, "A-") == 0) {
                score = 3.75;
            }
            else if (strcmp(grade, "B+") == 0) {
                score = 3.5;
            }
            else if (strcmp(grade, "B") == 0) {
                score = 3.0;
            }
            else if (strcmp(grade, "B-") == 0) {
                score = 2.75;
            }
            else if (strcmp(grade, "C+") == 0) {
                score = 2.50;
            }
            else if (strcmp(grade, "C") == 0) {
                score = 2.0;
            }
            else if (strcmp(grade, "F") == 0) {
                score = 0;
            }
            else {
                printf("Invalid Grade: %s \n", grade);
                while (getchar() != '\n');
                return;
            }

            totalGradePoints += score * credits;
            totalCredits += credits;
            totalYearCredit += credits;

        }

        // Store student information in the students array
        studentId[9] = '\0';
        students[numStudents].gpa[semester] = totalGradePoints / totalCredits;
        strcpy(students[numStudents].studentId, studentId);
        strcpy(students[numStudents].studentName, studentName);
        float cgpa = (students[numStudents].gpa[0] + students[numStudents].gpa[1] + students[numStudents].gpa[2]) / 3;
        students[numStudents].cgpa = cgpa;
        students[numStudents].studentStatus = 0;

        // Check if the student can graduate based on credits and CGPA
        if (totalYearCredit >= 21 && cgpa >= 2) {
            students[numStudents].studentStatus = 1;
        }
        cgpa = 0;

    }
    numStudents++;

    printf("\nAdd Student Complete\n");
    while (getchar() != '\n');
    mainMenu();
}

// Function of delete a student record
void deleteStudent() {
    char studentId[10];

    printf("Enter the student ID   : ");
    if (scanf("%9s", studentId) != 1) {
        printf("Invalid input. Please try again.\n");
        while ((getchar()) != '\n');
        return;
    }

    studentId[9] = '\0';

    // Search for the student to be deleted
    for (int i = 0; i < numStudents; i++) {
        if (strcmp(students[i].studentId, studentId) == 0) {

            // Shift elements to overwrite the deleted student
            for (int s = i; s < numStudents - 1; s++) {
                students[s] = students[s + 1];
            }
            numStudents--;
            printf("Student record with ID %s deleted successfully.\n", studentId);
            return;
        }
    }
            printf("Student with ID %s not found. \n", studentId);
        }

// Function to display student information
void displayStudent() {
    for (int i = 0; numStudents > i; i++) {
        printf("\n\nStudent Name                 : %s\n", students[i].studentName);
        printf("Student Id                   : %s\n", students[i].studentId);
        printf("Student first semester gpa   : %.2f\n", students[i].gpa[0]);
        printf("Student second semester gpa  : %.2f\n", students[i].gpa[1]);
        printf("Student third semester gpa   : %.2f\n", students[i].gpa[2]);
        printf("Student overall cgpa         : %.2f\n", students[i].cgpa);

        if (students[i].studentStatus == 1) {
            printf("\nThis student can graduate\n");
        }
        else {
            printf("\nThis student will not be able to graduate\n");
        }
        printf("\n\n");
    }
}

// Function to display student mode
void studentMenu() {
    char studentId[10];
    printf("_______________________________________\n");
    printf("|           Student's Mode            |\n");
    printf("|_____________________________________|\n");
    printf("\nPlease enter student ID : ");

    if (scanf("%9s", studentId) != 1) {
        while ((getchar()) != '\n');
        printf("Invalid student ID, please re-enter.\n");
        mainMenu();
        return;
    }
    else {
        while (getchar() != '\n');
    }

    studentId[9] = '\0';

    if (strlen(studentId) > 9) {
        printf("Invalid student ID. Please re-enter.\n");
        mainMenu();
        return;
    }

    // Search for the student and display their own information
    for (int i = 0; numStudents > i; i++) {
        if (strcmp(students[i].studentId, studentId) == 0) {
            printf("\n\nStudent Name                 : %s\n", students[i].studentName);
            printf("Student Id                   : %s\n", students[i].studentId);
            printf("Student first semester gpa   : %.2f\n", students[i].gpa[0]);
            printf("Student second semester gpa  : %.2f\n", students[i].gpa[1]);
            printf("Student third semester gpa   : %.2f\n", students[i].gpa[2]);
            printf("Student overall cgpa         : %.2f\n", students[i].cgpa);

            if (students[i].studentStatus == 1) {
                printf("\nCongratulations! You can graduate\n");
            }
            else {
                printf("\nSorry you will not be able to graduate\n");
            }
            mainMenu();
            return;
        }
    }

    printf("Student with ID %s not found. Please enter again.\n", studentId);
    mainMenu();

}

// Function to save student data to a file
void saveToFile() {
    FILE* file = fopen("students.txt", "w+");
    fprintf(file, "%d \n", numStudents);

    for (int i = 0; numStudents > i; i++) {
        fprintf(file, "%s\t %s\t %f %f %f %f \n",
            students[i].studentName, students[i].studentId,
            students[i].gpa[0], students[i].gpa[1],
            students[i].gpa[2], students[i].cgpa);
    }
    fclose(file);
    printf("\nFile Students Save Complete\n");
    exit(0);
}

// Function to load student data from a file
void loadFromFile() {
    FILE* file = fopen("students.txt", "r+");
    if (file == NULL) {
        printf("No saved student information found.");
        mainMenu();
    }

    (void)fscanf(file, "%d\n", &numStudents);
    
    for (int i = 0; i < numStudents; i++) {
        (void)fscanf(file, "%49[^\t] %9[^\t] %f %f %f %f \n",
            students[i].studentName, students[i].studentId,
            &students[i].gpa[0], &students[i].gpa[1],
            &students[i].gpa[2], &students[i].cgpa);
    }

    printf("\nLoad Information Students successfull");
    mainMenu();
}

